version: 2.1
description: |
  This orb was created to take out common logic for building, testing and deploying java applications build with gradle.
display:
  home_url: https://github.com/wigryz/custom-orb
  source_url: https://github.com/wigryz/custom-orb

executors:
  default:
    description: |
      If you want to provide a custom environment in your orb, insert your image here.
    docker:
      - image: gradle:<<parameters.tag>>
    parameters:
      tag:
        default: 8.5-jdk21
        description: |
          Pick a specific gradle image variant: https://hub.docker.com/_/gradle/tags
          Keep in mind that this image should have ssh and scp installed.
        type: string

commands:
  checkout-code:
    description: |
      Checks out code from current branch.
    steps:
      - checkout:
          path: ~/workspace

  run-tests:
    description: Run tests
    parameters:
      override-content:
        type: string
        default: ""
    steps:
      - unless:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Run tests"
                command: gradle test
      - when:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Overridden run-tests step"
                command: <<parameters.override-content>>

  compile:
    description: Compile application
    parameters:
      override-content:
        type: string
        default: ""
    steps:
      - unless:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Compile application"
                command: gradle assemble
      - when:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Overridden compile step"
                command: <<parameters.override-content>>

  create-executable:
    description: Create java executable file. By default it is done by gradle war.
    parameters:
      override-content:
        type: string
        default: ""
    steps:
      - unless:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Create java executable file (gradle war)"
                command: gradle war
      - when:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Overridden create-executable step"
                command: <<parameters.override-content>>
                
  copy-executable-to-deployment:
    description: Copy executable file into ./deployment directory
    parameters:
      override-content:
        type: string
        default: ""
    steps:
      - unless:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Copy executable to ./deployment directory"
                command: gradle copyWarFileToDeployment
      - when:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Overridden copy-executable-to-deployment step"
                command: <<parameters.override-content>>

  store-artifacts:
    description: Store files at ~/workspace/deployment/ as artifacts
    parameters:
      override-content:
        type: string
        default: ""
    steps:
      - unless:
          condition: << parameters.override-content >>
          steps:
            - store_artifacts:
                path: ~/workspace/deployment/
      - when:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Overridden store-artifacts step"
                command: <<parameters.override-content>>

  list-files-in-deployment:
    description: List files in directory ~/workspace/deployment/
    parameters:
      override-content:
        type: string
        default: ""
    steps:
      - unless:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "List all files in directory ~/workspace/deployment"
                command: ls -lA ~/workspace/deployment
      - when:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Overridden list-files-in-deployment step"
                command: <<parameters.override-content>>

  persist-to-workspace:
    description: Persist to workspace
    parameters:
      override-content:
        type: string
        default: ""
    steps:
      - unless:
          condition: << parameters.override-content >>
          steps:
            - persist_to_workspace:
                root: ~/workspace
                paths:
                  - deployment
      - when:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Overridden persist-to-workspace step"
                command: <<parameters.override-content>>

  send-files-to-server:
    description: |
      This command sends created war file and Dockerfile to server via scp.
      It also creates copy of those files in ~/backups folder.
    parameters:
      SSH_USER:
        type: string
      SSH_HOST:
        type: string
      APP_PATH:
        type: string
      SSH_FINGERPRINT:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - << parameters.SSH_FINGERPRINT >>
      - run:
          name: Sending files to application server
          command: |
            scp deployment/ROOT.war << parameters.SSH_USER >>@<< parameters.SSH_HOST >>:<< parameters.APP_PATH >>/current/ROOT.war
            scp deployment/Dockerfile << parameters.SSH_USER >>@<< parameters.SSH_HOST >>:<< parameters.APP_PATH >>/current/Dockerfile
      - run:
          name: Make copy of sent files in backups folder
          command: |
            ssh << parameters.SSH_USER >>@<< parameters.SSH_HOST >> "
            cd << parameters.APP_PATH >>
            mkdir -p backups
            timestamp=\$(date +'%Y_%m_%d_%H_%M_%S')
            cp current/ROOT.war backups/ROOT_\$timestamp.war
            cp current/Dockerfile backups/Dockerfile_\$timestamp.war"

  deploy-on-server:
    description: |
      This command deploys application using deploy.sh script.
    parameters:
      override-content:
        type: string
        default: ""
      SSH_USER:
        type: string
      SSH_HOST:
        type: string
      APP_PATH:
        type: string
      SSH_FINGERPRINT:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - << parameters.SSH_FINGERPRINT >>
      - unless:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: Deployment on application server
                command: |
                  ssh << parameters.SSH_USER >>@<< parameters.SSH_HOST >> "
                  cd << parameters.APP_PATH >>
                  sudo bash deploy.sh"
      - when:
          condition: << parameters.override-content >>
          steps:
            - run:
                name: "Overridden list-files-in-deployment step"
                command: <<parameters.override-content>>

jobs:
  build-java-app-using-gradle:
    working_directory: ~/workspace
    description: |
      Job starting tests, assembling application and storing deployment folder of application as artifacts.
    executor: default
    parameters:
      run-tests-override-content:
        type: string
        default: ""
      compile-override-content:
        type: string
        default: ""
      create-executable-override-content:
        type: string
        default: ""
      copy-executable-to-deployment-override-content:
        type: string
        default: ""
      store-artifacts-override-content:
        type: string
        default: ""
      list-files-in-deployment-override-content:
        type: string
        default: ""
      persist-to-workspace-override-content:
        type: string
        default: ""
    steps:
      - checkout-code
      - run-tests:
          override-content: << parameters.run-tests-override-content >>
      - compile:
          override-content: << parameters.compile-override-content >>
      - create-executable:
          override-content: << parameters.create-executable-override-content >>
      - copy-executable-to-deployment:
          override-content: << parameters.copy-executable-to-deployment-override-content >>
      - store-artifacts:
          override-content: << parameters.store-artifacts-override-content >>
      - list-files-in-deployment:
          override-content: << parameters.list-files-in-deployment-override-content >>
      - persist-to-workspace:
          override-content: << parameters.persist-to-workspace-override-content >>

examples:
  example:
    description: |
      Sample example description.
    usage:
      version: "2.1"
      orbs:
        <orb-name>: <namespace>/<orb-name>@1.2.3
      workflows:
        use-my-orb:
          jobs:
            - <orb-name>/<job-name>
