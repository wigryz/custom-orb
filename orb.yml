version: 2.1
description: |
  This orb was created to take out common logic for building, testing and deploying java applications build with gradle.
display:
  home_url: https://github.com/wigryz/custom-orb
  source_url: https://github.com/wigryz/custom-orb

# probably good idea would be to split those commands into small ones, to have possibility to override those commands
# todo check changing working directory in commands
# todo check omiting some points or completely overriding some steps
# todo check creating some jobs that can be used in some projects that match template in 100%
commands:
  build-with-gradle:
    description: |
      This command runs tests, compiles application and copies war into deployment folder.
      Deployment folder is stored as artifacts. It is also persisted in workspace.
    steps:
      - run:
          name: "Run tests"
          command: gradle test
      - run:
          name: "Compile application"
          command: gradle assemble
      - run:
          name: "gradle war"
          command: gradle war
      - run:
          name: "Copy war file into ./deployment directory"
          command: gradle copyWarFileToDeployment
      - store_artifacts:
          path: ~/workspace/deployment/
      - run:
          name: "List all files in directory ./workspace/deployment"
          command: ls -lA ~/workspace/deployment
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - deployment
  deploy-on-server:
    description: |
      This command deploys created war file and Dockerfile on server via scp.
      It also creates copy of those files in tests, compiles application and copies war into deployment folder.~/backups folder.
    steps:
      - add_ssh_keys:
          fingerprints:
            - << parameters.SSH_FINGERPRINT >>
      - run:
          name: Sending files to application server
          command: |
            scp deployment/ROOT.war << parameters.SSH_USER >>@<< parameters.SSH_HOST >>:current/ROOT.war
    parameters:
      SSH_USER:
        type: string
      SSH_HOST:
        type: string
      SSH_FINGERPRINT:
        type: string

executors:
  default:
    description: |
      If you want to provide a custom environment in your orb, insert your image here. If you do not require an executor, you can simply delete this directory.
    docker:
      - image: gradle:<<parameters.tag>>
    parameters:
      tag:
        default: 8.5-jdk21
        description: |
          Pick a specific gradle image variant: https://hub.docker.com/_/gradle/tags
          Keep in mind that this image should have ssh and scp installed.
        type: string

jobs:
  custom-java-build-with-gradle:
    description: |
      Sample description
    executor: default
    steps:
      - build-with-gradle

examples:
  example:
    description: |
      Sample example description.
    usage:
      version: "2.1"
      orbs:
        <orb-name>: <namespace>/<orb-name>@1.2.3
      workflows:
        use-my-orb:
          jobs:
            - <orb-name>/<job-name>
